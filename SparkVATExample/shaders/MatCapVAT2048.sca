precision highp float;
using namespace std;
#import <utils>
#import <SparkVAT2048.sca>
#import <MatCap.sca>

// @param[default=1.0] normalScale
// @param[default=1.0] normalTile
// @param[default=0.0] frame
// @param[default=1.0] scaleFactor
// @return color
// @return position
void main(  optional<std::Texture2d> diffuseTex,
            optional<std::Texture2d> matcapTex,
            optional<std::Texture2d> normalTex,
            optional<std::Texture2d> positionHigh0,
            optional<std::Texture2d> positionHigh1,
            optional<std::Texture2d> positionLow0,
            optional<std::Texture2d> positionLow1,
            optional<std::Texture2d> normalHigh0,
            optional<std::Texture2d> normalHigh1,
            optional<std::Texture2d> normalLow0,
            optional<std::Texture2d> normalLow1,
            optional<float> scaleFactor,
            float normalScale,
            float normalTile,
            float frame,
            out vec4 Color,
            out vec4 Position)

{
  // Attributes
  vec2 uv = getVertexTexCoord();

  mat3 tangentFrame = VATgetTangentFrame( normalHigh0,
                                          normalLow0,
                                          normalHigh1,
                                          normalLow1,
                                          frame);

  vec2 calculatedNormal = calculateNormal(normalTex, tangentFrame, normalScale, normalTile);

  Color =   diffuseTex.sample(uv).valueOr(vec4(0.)) +
            MatCapColor(matcapTex, calculatedNormal);

  Position = VATposition( positionHigh0,
                          positionLow0,
                          positionHigh1,
                          positionLow1,
                          frame,
                          scaleFactor);
}
